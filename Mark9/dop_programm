#include <stdio.h>
#define MAXLINE 1024
void main()
{
	FILE *fpin; // входной файл
	FILE *fpout; // выходной файл
	char line[MAXLINE]; // текущая строка
	char *ptr;
	char c;
	int cnt = 0, i = 0, n = 0, flag1 =0,flag2 =0,flag3 =0;
	fopen_s(&fpin, "test.txt", "rt"); // открыть файл для чтения
	if (fpin == NULL)
		return; // ошибка при открытии файла
	fopen_s(&fpout, "result.txt", "wt"); // открыть файл для записи
	if (fpout == NULL)
		return; // ошибка при открытии файла
	while (!feof(fpin))// цикл до конца входного файла
	{
		ptr = fgets(line, MAXLINE, fpin); // чтение строки
		if (ptr == NULL)
			break; // файл исчерпан
		while (line[i] != '\0')
		{
			cnt++;
			i++;
		}
		while (*ptr != '\0')
		{
			c = *ptr;
			if( *ptr >= '0' && *ptr <= '9')
				{
					flag1 =1;
				if( *(ptr + 1) >= '0' && *(ptr + 1) <= '9')
					{
						flag1 =2;
			    
				if( *(ptr + 2) >= '0' && *(ptr + 2) <= '9')
					flag1 =3;
				}
			}
			switch (c - 48)
			{
			case 0:            /* Note the colon, not a semicolon */
				for (i = cnt; n  < i; i--)
					line[i + 3] = line[i];
				line[n] = 'n';
				line[n + 1] = 'o';
				line[n + 2] = 'l';
				line[n + 3] = ' ';
				cnt += 3;
				n += 3;
				ptr += 3;
				if (flag1 == 1)
					{for (i = cnt; n  < i; i--)
					line[i + 7] = line[i];
				line[n] = ' ';
				line[n + 1] = 'e';
				line[n + 2] = 'd';
				line[n + 3] = 'e';
				line[n + 4] = 'n';
				line[n + 5] = 'i';
				line[n + 6] = 'c';
				line[n + 7] = ' ';
				cnt += 7;
				n += 7;
				ptr += 7;
				}
				if(flag1 == 2)
					{for (i = cnt; n  < i; i--)
					line[i + 9] = line[i];
				line[n] = ' ';
				line[n + 1] = 'd';
				line[n + 2] = 'e';
				line[n + 3] = 's';
				line[n + 4] = 'y';
				line[n + 5] = 'a';
				line[n + 6] = 't';
				line[n + 7] = 'k';
				line[n + 8] = 'a';
				line[n + 9] = ' ';
				cnt += 9;
				n += 9;
				ptr += 9;
				}
				if(flag1 == 3)
					{for (i = cnt; n  < i; i--)
					line[i + 7] = line[i];
				line[n] = ' ';
				line[n + 1] = 's';
				line[n + 2] = 'o';
				line[n + 3] = 't';
				line[n + 4] = 'n';
				line[n + 5] = 'y';
				line[n + 6] = 'a';
				line[n + 7] = ' ';
				cnt += 7;
				n += 7;
				ptr += 7;
				}
			flag1--;
				break;
			case 1:            /* Note the colon, not a semicolon */
				for (i = cnt; n  < i; i--)
					line[i + 4] = line[i];
				line[n] = 'o';
				line[n + 1] = 'd';
				line[n + 2] = 'i';
				line[n + 3] = 'n';
				line[n + 4] = ' ';
				cnt += 4;
				n += 4;
				ptr += 4;
				if (flag1 == 1)
					{for (i = cnt; n  < i; i--)
					line[i + 7] = line[i];
				line[n] = ' ';
				line[n + 1] = 'e';
				line[n + 2] = 'd';
				line[n + 3] = 'e';
				line[n + 4] = 'n';
				line[n + 5] = 'i';
				line[n + 6] = 'c';
				line[n + 7] = ' ';
				cnt += 7;
				n += 7;
				ptr += 7;
				}
				if(flag1 == 2)
					{for (i = cnt; n  < i; i--)
					line[i + 9] = line[i];
				line[n] = ' ';
				line[n + 1] = 'd';
				line[n + 2] = 'e';
				line[n + 3] = 's';
				line[n + 4] = 'y';
				line[n + 5] = 'a';
				line[n + 6] = 't';
				line[n + 7] = 'k';
				line[n + 8] = 'a';
				line[n + 9] = ' ';
				cnt += 9;
				n += 9;
				ptr += 9;
				}
				if(flag1 == 3)
					{for (i = cnt; n  < i; i--)
					line[i + 7] = line[i];
				line[n] = ' ';
				line[n + 1] = 's';
				line[n + 2] = 'o';
				line[n + 3] = 't';
				line[n + 4] = 'n';
				line[n + 5] = 'y';
				line[n + 6] = 'a';
				line[n + 7] = ' ';
				cnt += 7;
				n += 7;
				ptr += 7;
				}
			flag1--;
				break;
			case 2:
				for (i = cnt; n  < i; i--)
					line[i + 3] = line[i];
				line[n] = 'd';
				line[n + 1] = 'v';
				line[n + 2] = 'a';
				line[n + 3] = ' ';
				cnt += 3;
				n += 3;
				ptr += 3;
				if (flag1 == 1)
					{for (i = cnt; n  < i; i--)
					line[i + 7] = line[i];
				line[n] = ' ';
				line[n + 1] = 'e';
				line[n + 2] = 'd';
				line[n + 3] = 'e';
				line[n + 4] = 'n';
				line[n + 5] = 'i';
				line[n + 6] = 'c';
				line[n + 7] = ' ';
				cnt += 7;
				n += 7;
				ptr += 7;
				}
				if(flag1 == 2)
					{for (i = cnt; n  < i; i--)
					line[i + 9] = line[i];
				line[n] = ' ';
				line[n + 1] = 'd';
				line[n + 2] = 'e';
				line[n + 3] = 's';
				line[n + 4] = 'y';
				line[n + 5] = 'a';
				line[n + 6] = 't';
				line[n + 7] = 'k';
				line[n + 8] = 'a';
				line[n + 9] = ' ';
				cnt += 9;
				n += 9;
				ptr += 9;
				}
				if(flag1 == 3)
					{for (i = cnt; n  < i; i--)
					line[i + 7] = line[i];
				line[n] = ' ';
				line[n + 1] = 's';
				line[n + 2] = 'o';
				line[n + 3] = 't';
				line[n + 4] = 'n';
				line[n + 5] = 'y';
				line[n + 6] = 'a';
				line[n + 7] = ' ';
				cnt += 7;
				n += 7;
				ptr += 7;
				}
			flag1--;
				break;
			case 3:
				for (i = cnt; n  < i; i--)
					line[i + 3] = line[i];
				line[n] = 't';
				line[n + 1] = 'r';
				line[n + 2] = 'i';
				line[n + 3] = ' ';
				cnt += 3;
				n += 3;
				ptr += 3;
				if (flag1 == 1)
					{for (i = cnt; n  < i; i--)
					line[i + 7] = line[i];
				line[n] = ' ';
				line[n + 1] = 'e';
				line[n + 2] = 'd';
				line[n + 3] = 'e';
				line[n + 4] = 'n';
				line[n + 5] = 'i';
				line[n + 6] = 'c';
				line[n + 7] = ' ';
				cnt += 7;
				n += 7;
				ptr += 7;
				}
				if(flag1 == 2)
					{for (i = cnt; n  < i; i--)
					line[i + 9] = line[i];
				line[n] = ' ';
				line[n + 1] = 'd';
				line[n + 2] = 'e';
				line[n + 3] = 's';
				line[n + 4] = 'y';
				line[n + 5] = 'a';
				line[n + 6] = 't';
				line[n + 7] = 'k';
				line[n + 8] = 'a';
				line[n + 9] = ' ';
				cnt += 9;
				n += 9;
				ptr += 9;
				}
				if(flag1 == 3)
					{for (i = cnt; n  < i; i--)
					line[i + 7] = line[i];
				line[n] = ' ';
				line[n + 1] = 's';
				line[n + 2] = 'o';
				line[n + 3] = 't';
				line[n + 4] = 'n';
				line[n + 5] = 'y';
				line[n + 6] = 'a';
				line[n + 7] = ' ';
				cnt += 7;
				n += 7;
				ptr += 7;
				}
			flag1--;
				break;
			case 4:
				for (i = cnt; n  < i; i--)
					line[i + 7] = line[i];
				line[n] = 'c';
				line[n + 1] = 'h';
				line[n + 2] = 'e';
				line[n + 3] = 't';
				line[n + 4] = 'i';
				line[n + 5] = 'r';
				line[n + 6] = 'e';
				line[n + 7] = ' ';
				cnt += 7;
				n += 7;
				ptr += 7;
				if (flag1 == 1)
					{for (i = cnt; n  < i; i--)
					line[i + 7] = line[i];
				line[n] = ' ';
				line[n + 1] = 'e';
				line[n + 2] = 'd';
				line[n + 3] = 'e';
				line[n + 4] = 'n';
				line[n + 5] = 'i';
				line[n + 6] = 'c';
				line[n + 7] = ' ';
				cnt += 7;
				n += 7;
				ptr += 7;
				}
				if(flag1 == 2)
					{for (i = cnt; n  < i; i--)
					line[i + 9] = line[i];
				line[n] = ' ';
				line[n + 1] = 'd';
				line[n + 2] = 'e';
				line[n + 3] = 's';
				line[n + 4] = 'y';
				line[n + 5] = 'a';
				line[n + 6] = 't';
				line[n + 7] = 'k';
				line[n + 8] = 'a';
				line[n + 9] = ' ';
				cnt += 9;
				n += 9;
				ptr += 9;
				}
				if(flag1 == 3)
					{for (i = cnt; n  < i; i--)
					line[i + 7] = line[i];
				line[n] = ' ';
				line[n + 1] = 's';
				line[n + 2] = 'o';
				line[n + 3] = 't';
				line[n + 4] = 'n';
				line[n + 5] = 'y';
				line[n + 6] = 'a';
				line[n + 7] = ' ';
				cnt += 7;
				n += 7;
				ptr += 7;
				}
			flag1--;
				break;
			case 5:
				for (i = cnt; n  < i; i--)
					line[i + 4] = line[i];
				line[n] = 'p';
				line[n + 1] = 'y';
				line[n + 2] = 'a';
				line[n + 3] = 't';
				line[n + 4] = ' ';
				cnt += 4;
				n += 4;
				ptr += 4;
				if (flag1 == 1)
					{for (i = cnt; n  < i; i--)
					line[i + 7] = line[i];
				line[n] = ' ';
				line[n + 1] = 'e';
				line[n + 2] = 'd';
				line[n + 3] = 'e';
				line[n + 4] = 'n';
				line[n + 5] = 'i';
				line[n + 6] = 'c';
				line[n + 7] = ' ';
				cnt += 7;
				n += 7;
				ptr += 7;
				}
				if(flag1 == 2)
					{for (i = cnt; n  < i; i--)
					line[i + 9] = line[i];
				line[n] = ' ';
				line[n + 1] = 'd';
				line[n + 2] = 'e';
				line[n + 3] = 's';
				line[n + 4] = 'y';
				line[n + 5] = 'a';
				line[n + 6] = 't';
				line[n + 7] = 'k';
				line[n + 8] = 'a';
				line[n + 9] = ' ';
				cnt += 9;
				n += 9;
				ptr += 9;
				}
				if(flag1 == 3)
					{for (i = cnt; n  < i; i--)
					line[i + 7] = line[i];
				line[n] = ' ';
				line[n + 1] = 's';
				line[n + 2] = 'o';
				line[n + 3] = 't';
				line[n + 4] = 'n';
				line[n + 5] = 'y';
				line[n + 6] = 'a';
				line[n + 7] = ' ';
				cnt += 7;
				n += 7;
				ptr += 7;
				}
			flag1--;
				break;
			case 6:
				for (i = cnt; n  < i; i--)
					line[i + 5] = line[i];
				line[n] = 's';
				line[n + 1] = 'h';
				line[n + 2] = 'e';
				line[n + 3] = 's';
				line[n + 4] = 't';
				line[n + 5] = ' ';
				cnt += 5;
				n += 5;
				ptr += 5;
				if (flag1 == 1)
					{for (i = cnt; n  < i; i--)
					line[i + 7] = line[i];
				line[n] = ' ';
				line[n + 1] = 'e';
				line[n + 2] = 'd';
				line[n + 3] = 'e';
				line[n + 4] = 'n';
				line[n + 5] = 'i';
				line[n + 6] = 'c';
				line[n + 7] = ' ';
				cnt += 7;
				n += 7;
				ptr += 7;
				}
				if(flag1 == 2)
					{for (i = cnt; n  < i; i--)
					line[i + 9] = line[i];
				line[n] = ' ';
				line[n + 1] = 'd';
				line[n + 2] = 'e';
				line[n + 3] = 's';
				line[n + 4] = 'y';
				line[n + 5] = 'a';
				line[n + 6] = 't';
				line[n + 7] = 'k';
				line[n + 8] = 'a';
				line[n + 9] = ' ';
				cnt += 9;
				n += 9;
				ptr += 9;
				}
				if(flag1 == 3)
					{for (i = cnt; n  < i; i--)
					line[i + 7] = line[i];
				line[n] = ' ';
				line[n + 1] = 's';
				line[n + 2] = 'o';
				line[n + 3] = 't';
				line[n + 4] = 'n';
				line[n + 5] = 'y';
				line[n + 6] = 'a';
				line[n + 7] = ' ';
				cnt += 7;
				n += 7;
				ptr += 7;
				}
			flag1--;
				break;
			case 7:
				for (i = cnt; n  < i; i--)
					line[i + 3] = line[i];
				line[n] = 's';
				line[n + 1] = 'e';
				line[n + 2] = 'm';
				line[n + 3] = ' ';
				cnt += 3;
				n += 3;
				ptr += 3;
				if (flag1 == 1)
					{for (i = cnt; n  < i; i--)
					line[i + 7] = line[i];
				line[n] = ' ';
				line[n + 1] = 'e';
				line[n + 2] = 'd';
				line[n + 3] = 'e';
				line[n + 4] = 'n';
				line[n + 5] = 'i';
				line[n + 6] = 'c';
				line[n + 7] = ' ';
				cnt += 7;
				n += 7;
				ptr += 7;
				}
				if(flag1 == 2)
					{for (i = cnt; n  < i; i--)
					line[i + 9] = line[i];
				line[n] = ' ';
				line[n + 1] = 'd';
				line[n + 2] = 'e';
				line[n + 3] = 's';
				line[n + 4] = 'y';
				line[n + 5] = 'a';
				line[n + 6] = 't';
				line[n + 7] = 'k';
				line[n + 8] = 'a';
				line[n + 9] = ' ';
				cnt += 9;
				n += 9;
				ptr += 9;
				}
				if(flag1 == 3)
					{for (i = cnt; n  < i; i--)
					line[i + 7] = line[i];
				line[n] = ' ';
				line[n + 1] = 's';
				line[n + 2] = 'o';
				line[n + 3] = 't';
				line[n + 4] = 'n';
				line[n + 5] = 'y';
				line[n + 6] = 'a';
				line[n + 7] = ' ';
				cnt += 7;
				n += 7;
				ptr += 7;
				}
			flag1--;
				break;
			case 8:
				for (i = cnt; n  < i; i--)
					line[i + 5] = line[i];
				line[n] = 'v';
				line[n + 1] = 'o';
				line[n + 2] = 's';
				line[n + 3] = 'e';
				line[n + 4] = 'm';
				line[n + 5] = ' ';
				cnt += 5;
				n += 5;
				ptr += 5;
				if (flag1 == 1)
					{for (i = cnt; n  < i; i--)
					line[i + 7] = line[i];
				line[n] = ' ';
				line[n + 1] = 'e';
				line[n + 2] = 'd';
				line[n + 3] = 'e';
				line[n + 4] = 'n';
				line[n + 5] = 'i';
				line[n + 6] = 'c';
				line[n + 7] = ' ';
				cnt += 7;
				n += 7;
				ptr += 7;
				}
				if(flag1 == 2)
					{for (i = cnt; n  < i; i--)
					line[i + 9] = line[i];
				line[n] = ' ';
				line[n + 1] = 'd';
				line[n + 2] = 'e';
				line[n + 3] = 's';
				line[n + 4] = 'y';
				line[n + 5] = 'a';
				line[n + 6] = 't';
				line[n + 7] = 'k';
				line[n + 8] = 'a';
				line[n + 9] = ' ';
				cnt += 9;
				n += 9;
				ptr += 9;
				}
				if(flag1 == 3)
					{for (i = cnt; n  < i; i--)
					line[i + 7] = line[i];
				line[n] = ' ';
				line[n + 1] = 's';
				line[n + 2] = 'o';
				line[n + 3] = 't';
				line[n + 4] = 'n';
				line[n + 5] = 'y';
				line[n + 6] = 'a';
				line[n + 7] = ' ';
				cnt += 7;
				n += 7;
				ptr += 7;
				}
			flag1--;
				break;
			case 9:
				for (i = cnt; n  < i; i--)
					line[i + 6] = line[i];
				line[n] = 'd';
				line[n + 1] = 'e';
				line[n + 2] = 'v';
				line[n + 3] = 'y';
				line[n + 4] = 'a';
				line[n + 5] = 't';
				line[n + 6] = ' ';
				cnt += 6;
				n += 6;
				ptr += 6;
				if (flag1 == 1)
					{for (i = cnt; n  < i; i--)
					line[i + 7] = line[i];
				line[n] = ' ';
				line[n + 1] = 'e';
				line[n + 2] = 'd';
				line[n + 3] = 'e';
				line[n + 4] = 'n';
				line[n + 5] = 'i';
				line[n + 6] = 'c';
				line[n + 7] = ' ';
				cnt += 7;
				n += 7;
				ptr += 7;
				}
				if(flag1 == 2)
					{for (i = cnt; n  < i; i--)
					line[i + 9] = line[i];
				line[n] = ' ';
				line[n + 1] = 'd';
				line[n + 2] = 'e';
				line[n + 3] = 's';
				line[n + 4] = 'y';
				line[n + 5] = 'a';
				line[n + 6] = 't';
				line[n + 7] = 'k';
				line[n + 8] = 'a';
				line[n + 9] = ' ';
				cnt += 9;
				n += 9;
				ptr += 9;
				}
				if(flag1 == 3)
					{for (i = cnt; n  < i; i--)
					line[i + 7] = line[i];
				line[n] = ' ';
				line[n + 1] = 's';
				line[n + 2] = 'o';
				line[n + 3] = 't';
				line[n + 4] = 'n';
				line[n + 5] = 'y';
				line[n + 6] = 'a';
				line[n + 7] = ' ';
				cnt += 7;
				n += 7;
				ptr += 7;
				}
			flag1--;
				break;
			default:
				n++;
				ptr++;
			}
		}
		fputs(line, fpout); // запись строки
		n = 0;
		cnt = 0;
		for (i = 0; i < MAXLINE; i++)
			line[i] = '\0';
	}
	fclose(fpin); // закрыть входной файл
	fclose(fpout); // закрыть выходной файл
}
